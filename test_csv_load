import boto3


def open_csv_from_s3(bucket, key):
    client = boto3.client('s3')
    return client.get_object(Bucket=bucket, Key=key)


def get_all_csvs_from_s3(bucket, prefix):
    content = ''

    s3_resource = boto3.resource('s3')
    bucket_resource = s3_resource.Bucket(bucket)
    objects = bucket_resource.objects.filter(Prefix=prefix)

    for object in objects:
        if object.key.endswith('.csv'):
            file_content = object.get()['Body'].read().decode('utf-8')
            no_header_content = file_content.split('\n')[1:]
            content += ''.join(no_header_content)
    return content


def create_header(csv_object):
    return csv_object['Body'].read().decode('utf-8').split()[0]


def write_csv(filename, h_data, c_data):
    with open(filename, 'w') as file:
        file.write(h_data)
        file.write('\n')

    with open(filename, 'a') as file:
        file.write(c_data)

    return True

#############################################################

# Pytest

# academy


bucket_name = 'data-eng-31-final-project'
object_key = 'Academy/Engineering_17_2019-02-18.csv'
prefix = 'Academy'
csv_obj = open_csv_from_s3(bucket_name, object_key)
header = create_header(csv_obj)
content = get_all_csvs_from_s3(bucket_name, prefix)


def test_academy_open_csv_from_s3():
    result = open_csv_from_s3(bucket_name,object_key)
    assert result['ResponseMetadata']['HTTPStatusCode'] == 200


def test_academy_get_from_s3():
    result = get_all_csvs_from_s3(bucket_name, prefix)
    assert len(result) >= 52248


def test_academy_header():
    result = create_header(csv_obj)
    assert 'name', 'Independant_W1' in result and len(result) > 5000


def test_academy_write_csv():
    result = write_csv('academy.csv', header, content)
    assert result == True


# talent


prefix = 'Talent'
object_key = 'Talent/April2019Applicants.csv'
csv_obj = open_csv_from_s3(bucket_name, object_key)
header = create_header(csv_obj)
content = get_all_csvs_from_s3(bucket_name, prefix)


def test_talent_open_csv_from_s3():
    result = open_csv_from_s3(bucket_name,object_key)
    assert result['ResponseMetadata']['HTTPStatusCode'] == 200


def test_talent_get_from_s3():
    result = get_all_csvs_from_s3(bucket_name, prefix)
    assert len(result) >= 52248


def test_talent_header():
    result = create_header(csv_obj)
    assert 'name', 'postcode' in result and len(result) > 200


def test_talent_write_csv():
    result = write_csv('academy.csv', header, content)
    assert result == True
